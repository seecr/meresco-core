Changeset created on Mon Dec 17 15:29:08 UTC 2012 by Seecr (Seek You Too B.V.)

Description: introduced Transaction.objectScope method

    Transaction.objectScope provides component instances with a private dictionary per
    transaction (with as main advantage that it's automatically garbage collected, even
    when the component never receives a message with respect to the termination of the
    transaction).

Baseline version: 4.0.2

From 8b167aa04dc48726e60158c9f2bbf04b7bd63d04 Mon Sep 17 00:00:00 2001
From: Seecr Development Team <development@seecr.nl>
Date: Mon, 17 Dec 2012 16:18:45 +0100
Subject: [PATCH] HM/JPM: introducing Transaction.objectScope method

---
 meresco/core/transaction.py |    4 +++-
 test/transactiontest.py     |   12 ++++++++++--
 2 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/meresco/core/transaction.py b/meresco/core/transaction.py
index 6837597..f07046e 100644
--- a/meresco/core/transaction.py
+++ b/meresco/core/transaction.py
@@ -28,11 +28,11 @@
 # 
 ## end license ##
 
+
 class TransactionException(Exception):
     pass
 
 class Transaction(object):
-
     def __init__(self, name):
         self._resourceManagers = []
         self.locals = {}
@@ -58,3 +58,5 @@ class Transaction(object):
     def abort(self):
         raise TransactionException()
 
+    def objectScope(self, o):
+        return self.locals.setdefault('%s@%s' % (o.__class__.__name__, id(o)), {})
diff --git a/test/transactiontest.py b/test/transactiontest.py
index 875ebcc..78facf8 100644
--- a/test/transactiontest.py
+++ b/test/transactiontest.py
@@ -475,8 +475,16 @@ class TransactionTest(TestCase):
         list(compose(body.all.doSomething()))
         self.assertEquals(['first', 'second', 'done 1', 'done 2'], collected.values()[0])
 
-
-    def testTransactionScopeName(self):
+    def testTransactionScopeObservableName(self):
         self.assertEquals('name', TransactionScope('name').observable_name())
         self.assertEquals('name', TransactionScope(transactionName='name').observable_name())
         self.assertEquals('name', TransactionScope(transactionName='transaction', name='name').observable_name())
+
+    def testObjectScope(self):
+        o1 = object()
+        tx = Transaction('transactionScopeName')
+        tx.objectScope(o1)['key'] = 'value'
+        self.assertEquals({'key': 'value'}, tx.objectScope(o1))
+        o2 = object()
+        self.assertEquals({}, tx.objectScope(o2))
+
-- 
1.7.2.5

